{"version":3,"sources":["webpack:///src/app/address/address-route.module.ts","webpack:///src/app/address/main/main.component.ts","webpack:///src/app/address/main/main.component.html","webpack:///src/app/address/address.module.ts"],"names":["router","path","component","AddressRouting","forChild","MainComponent","apollo","route","fb","toastyService","subscriptions","text","options","layers","opacity","maxZoom","detectRetina","attribution","zoom","center","addressForm","group","title","address","lat","lng","position","showClose","theme","type","closeOther","getAddresses","forEach","e","unsubscribe","clearAll","toastOptions","msg","timeout","onAdd","toast","console","log","onRemove","info","success","wait","error","warning","query","watchQuery","fetchPolicy","variables","valueChanges","subscribe","result","addresses","data","getAllAdress","err","addToast","message","push","id","mutate","mutation","res","modal","show","patchValue","map","myIcon","className","icon","addTo","getZoom","target","_id","value","UpdateAddress","hide","panTo","onMapReady","onMapZoomEnd","onUpdate","checkAddress","AddressModule","forRoot"],"mappings":";;;;;;;;;;;;;;;;AACA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMA,MAAM,GAAW,CACnB;AACIC,YAAI,EAAE,EADV;AAEIC,iBAAS,EAAE;AAFf,OADmB,CAAvB;;UAgBaC,c;;;;;yBAAAA,c;AAAc,O;;;cAAdA;;;kBARA,CACL,6DAAaC,QAAb,CAAsBJ,MAAtB,CADK,EAEL,kEAFK,C,EAKL,4D;;;;4HAGKG,c,EAAc;AAAA,kFANnB,kEAMmB;AANP,oBAGZ,4DAHY;AAMO,S;AAHP,O;;;;;;;;;ACjBpB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgBc;;AACE;;AAAgB;;AAAiB;;AACjC;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAqB;;AACzB;;AAAI;;AAA8C;;AAElD;;AACK;;AAA0G;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAM;;AACjJ;;AAAyG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;AAAM;;AACrJ;;AACN;;;;;;;;AATkB;;AAAA;;AACZ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAG6E;;AAAA;;AACD;;AAAA;;;;UDFnFE,a;AAwCX,+BACUC,MADV,EAEUC,KAFV,EAGUC,EAHV,EAIUC,aAJV,EAKUT,MALV,EAKwB;AAAA;;AAJd,eAAAM,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAT,MAAA,GAAAA,MAAA;AA3CV,eAAAU,aAAA,GAAgB,EAAhB;AAGA,eAAAC,IAAA,GAAO,EAAP;AAIA,eAAAC,OAAA,GAAsB;AACpBC,kBAAM,EAAE,CAAC,0DAAU,oDAAV,EAAgE;AACvEC,qBAAO,EAAE,GAD8D;AAEvEC,qBAAO,EAAE,EAF8D;AAGvEC,0BAAY,EAAE,IAHyD;AAIvEC,yBAAW,EAAE;AAJ0D,aAAhE,CAAD,CADY;AAOpBC,gBAAI,EAAE,EAPc;AAQpBC,kBAAM,EAAE,uDAAO,iBAAP,EAA0B,CAAC,iBAA3B;AARY,WAAtB;AAaA,eAAAC,WAAA,GAAc,KAAKZ,EAAL,CAAQa,KAAR,CAAc;AAC1BC,iBAAK,EAAE,CAAC,EAAD,CADmB;AAE1BC,mBAAO,EAAE,CAAC,EAAD,CAFiB;AAG1BC,eAAG,EAAE,CAAC,EAAD,CAHqB;AAI1BC,eAAG,EAAE,CAAC,EAAD;AAJqB,WAAd,CAAd,CAuBwB,CAfxB;;AACA,eAAAC,QAAA,GAAW,cAAX;AAGA,eAAAC,SAAA,GAAY,IAAZ;AACA,eAAAC,KAAA,GAAQ,WAAR;AACA,eAAAC,IAAA,GAAO,SAAP;AACA,eAAAC,UAAA,GAAa,KAAb;AAUK;;;;iBAIL,oBAAQ;AACN,iBAAKC,YAAL;AAED;;;iBAED,uBAAc;AACZ,iBAAKrB,aAAL,CAAmBsB,OAAnB,CAA2B,UAACC,CAAD;AAAA,qBAAqBA,CAAC,CAACC,WAAF,EAArB;AAAA,aAA3B;AACD;;;iBAED,kBAAStB,OAAT,EAAkB;AAChB,gBAAIA,OAAO,CAACkB,UAAZ,EAAwB;AACtB,mBAAKrB,aAAL,CAAmB0B,QAAnB;AACD;;AACD,iBAAKT,QAAL,GAAgBd,OAAO,CAACc,QAAR,GAAmBd,OAAO,CAACc,QAA3B,GAAsC,KAAKA,QAA3D;AACA,gBAAMU,YAAY,GAAiB;AACjCd,mBAAK,EAAEV,OAAO,CAACU,KADkB;AAEjCe,iBAAG,EAAEzB,OAAO,CAACyB,GAFoB;AAGjCV,uBAAS,EAAEf,OAAO,CAACe,SAHc;AAIjCW,qBAAO,EAAE1B,OAAO,CAAC0B,OAJgB;AAKjCV,mBAAK,EAAEhB,OAAO,CAACgB,KALkB;AAMjCW,mBAAK,EAAE,eAACC,KAAD,EAAsB;AAC3B;AACAC,uBAAO,CAACC,GAAR,CAAY,wBAAZ;AAED,eAVgC;AAWjCC,sBAAQ,EAAE,kBAACH,KAAD,EAAsB;AAC9B;AACAC,uBAAO,CAACC,GAAR,CAAY,UAAZ;AACD;AAdgC,aAAnC;;AAiBA,oBAAQ9B,OAAO,CAACiB,IAAhB;AACE,mBAAK,SAAL;AAAgB,qBAAKpB,aAAL,YAA2B2B,YAA3B;AAA0C;;AAC1D,mBAAK,MAAL;AAAa,qBAAK3B,aAAL,CAAmBmC,IAAnB,CAAwBR,YAAxB;AAAuC;;AACpD,mBAAK,SAAL;AAAgB,qBAAK3B,aAAL,CAAmBoC,OAAnB,CAA2BT,YAA3B;AAA0C;;AAC1D,mBAAK,MAAL;AAAa,qBAAK3B,aAAL,CAAmBqC,IAAnB,CAAwBV,YAAxB;AAAuC;;AACpD,mBAAK,OAAL;AAAc,qBAAK3B,aAAL,CAAmBsC,KAAnB,CAAyBX,YAAzB;AAAwC;;AACtD,mBAAK,SAAL;AAAgB,qBAAK3B,aAAL,CAAmBuC,OAAnB,CAA2BZ,YAA3B;AAA0C;AAN5D;AAQD;;;iBAGD,wBAAe;AAAA;;AACb,gBAAMa,KAAK,GAAG,KAAK3C,MAAL,CAAY4C,UAAZ,CAAuB;AACnCC,yBAAW,EAAE,UADsB;AAEnCF,mBAAK,EAAE,kDAAF,kYAF8B;AAiBnCG,uBAAS,EAAE;AAjBwB,aAAvB,EAqBXC,YArBW,CAsBXC,SAtBW,CAsBD,UAACC,MAAD,EAAiB;AAC1B,mBAAI,CAACC,SAAL,GAAiBD,MAAM,CAACE,IAAP,CAAYC,YAA7B;AACD,aAxBW,EAyBV,UAACC,GAAD,EAAS;AAEP,mBAAI,CAACC,QAAL,CAAc;AACZtC,qBAAK,EAAE,OADK;AAEZe,mBAAG,EAAEsB,GAAG,CAACE,OAFG;AAGZvB,uBAAO,EAAE,IAHG;AAIZV,qBAAK,EAAE,UAJK;AAKZF,wBAAQ,EAAE,cALE;AAMZG,oBAAI,EAAE;AANM,eAAd;AAQD,aAnCS,CAAd;AAqCA,iBAAKnB,aAAL,CAAmBoD,IAAnB,CAAwBb,KAAxB;AACD;;;iBAGD,uBAAcc,EAAd,EAAkB;AAAA;;AAEhB,gBAAMd,KAAK,GAAG,KAAK3C,MAAL,CAAY0D,MAAZ,CAAmB;AAC/BC,sBAAQ,EAAE,kDAAF,oOADuB;AAQ/Bb,uBAAS,EAAE;AACTW,kBAAE,EAAFA;AADS;AARoB,aAAnB,EAYXT,SAZW,CAaV,UAAAY,GAAG,EAAI;AACL,oBAAI,CAACnC,YAAL;;AACA,oBAAI,CAAC6B,QAAL,CAAc;AACZtC,qBAAK,EAAE,MADK;AAEZe,mBAAG,EAAE,2BAFO;AAGZC,uBAAO,EAAE,IAHG;AAIZV,qBAAK,EAAE,UAJK;AAKZF,wBAAQ,EAAE,cALE;AAMZG,oBAAI,EAAE;AANM,eAAd;AAQD,aAvBS,CAAd;AAyBA,iBAAKnB,aAAL,CAAmBoD,IAAnB,CAAwBb,KAAxB;AACD;;;iBAED,uBAAc1B,OAAd,EAAuB;AACrB,iBAAK4C,KAAL,CAAWC,IAAX;AACA,iBAAK7C,OAAL,GAAeA,OAAf;AACA,iBAAKH,WAAL,CAAiBiD,UAAjB,CAA4B,KAAK9C,OAAjC;AAED;;;iBAGD,oBAAW+C,GAAX,EAAgB;AAEd,iBAAKA,GAAL,GAAWA,GAAX;AAEA,gBAAMC,MAAM,GAAG,gDAAU;AAAEC,uBAAS,EAAE;AAAb,aAAV,CAAf;;AACA,gBAAI,KAAKjD,OAAL,IAAgB,KAAKA,OAAL,CAAaC,GAA7B,IAAoC,KAAKD,OAAL,CAAaE,GAArD,EAA0D;AACxD,6DAAS,CAAC,KAAKF,OAAL,CAAaC,GAAd,EAAmB,KAAKD,OAAL,CAAaE,GAAhC,CAAT,EAA+C;AAAEgD,oBAAI,EAAEF;AAAR,eAA/C,EAAiEG,KAAjE,CAAuE,KAAKJ,GAA5E;AACD,aAFD,MAEO;AACL,6DAAS,CAAC,iBAAD,EAAoB,CAAC,iBAArB,CAAT,EAAkD;AAAEG,oBAAI,EAAEF;AAAR,eAAlD,EAAoEG,KAApE,CAA0E,KAAKJ,GAA/E;AACD;;AAED,iBAAKpD,IAAL,GAAYoD,GAAG,CAACK,OAAJ,EAAZ;AAGD;;;iBAED,sBAAa1C,CAAb,EAA+B;AAC7B,iBAAKf,IAAL,GAAYe,CAAC,CAAC2C,MAAF,CAASD,OAAT,EAAZ;AAED;;;iBAED,oBAAW;AAAA;;AAET,gBAAaZ,EAAb,GAAoB,KAAKxC,OAAzB,CAAQsD,GAAR;AACA,gBAAMpB,IAAI,GAAG,KAAKrC,WAAL,CAAiB0D,KAA9B;AACA,mBAAOrB,IAAI,CAACoB,GAAZ;AACA,gBAAM5B,KAAK,GAAG,KAAK3C,MAAL,CACX0D,MADW,CACiB;AAC3BC,sBAAQ,EAAE,kDAAF,mUADmB;AAY3Bb,uBAAS,EAAE;AACTW,kBAAE,EAAFA,EADS;AAETgB,6BAAa,EAAEtB;AAFN;AAZgB,aADjB,EAiBTH,SAjBS,CAkBV,UAACY,GAAD,EAAS;AACP,oBAAI,CAAC3C,OAAL,GAAe,EAAf;;AACA,oBAAI,CAAC4C,KAAL,CAAWa,IAAX;;AACA,oBAAI,CAACpB,QAAL,CAAc;AACZtC,qBAAK,EAAE,MADK;AAEZe,mBAAG,EAAE,2BAFO;AAGZC,uBAAO,EAAE,IAHG;AAIZV,qBAAK,EAAE,UAJK;AAKZF,wBAAQ,EAAE,cALE;AAMZG,oBAAI,EAAE;AANM,eAAd;AAQD,aA7BS,EA8BV,UAAC8B,GAAD,EAAS;AACP,oBAAI,CAACC,QAAL,CAAc;AACZtC,qBAAK,EAAE,OADK;AAEZe,mBAAG,EAAEsB,GAAG,CAACE,OAFG;AAGZvB,uBAAO,EAAE,IAHG;AAIZV,qBAAK,EAAE,UAJK;AAKZF,wBAAQ,EAAE,cALE;AAMZG,oBAAI,EAAE;AANM,eAAd;AAQD,aAvCS,CAAd;AAyCA,iBAAKnB,aAAL,CAAmBoD,IAAnB,CAAwBb,KAAxB;AACD;;;iBAED,wBAAe;AACb,iBAAKqB,GAAL,CAASW,KAAT,CAAe,CAAC,KAAK7D,WAAL,CAAiB0D,KAAjB,CAAuBtD,GAAxB,EAA6B,KAAKJ,WAAL,CAAiB0D,KAAjB,CAAuBrD,GAApD,CAAf;AACD;;;;;;;yBArPUpB,a,EAAa,sH,EAAA,+H,EAAA,2H,EAAA,yH,EAAA,uH;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA;AAAA;sEAoBb,6F,EAAmB,C;;;;;;;;;;;;;;AC3ChC;;AAGI;;AACI;;AACI;;AACE;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAK;;AACT;;AAAI;;AAAO;;AACX;;AAAI;;AAAE;;AACN;;AAAK;;AAAO;;AACd;;AACA;;AACA;;AAEA;;AAYA;;AACF;;AACF;;AACN;;AACJ;;AAGA;;AACI;;AACK;;AAAI;;AAAU;;AACnB;;AACA;;AAEY;;AAII;AAAA,qBAAmB,IAAA6E,UAAA,QAAnB;AAAqC,aAArC,EAAsC,mBAAtC,EAAsC;AAAA,qBACjB,IAAAC,YAAA,QADiB;AACG,aADzC;;AAQH;;AAGL;;AAAgC;AAAA,qBAAY,IAAAC,QAAA,EAAZ;AAAsB,aAAtB;;AAE5B;;AACI;;AACJ;;AAEA;;AACI;;AACJ;;AAEA;;AACI;;AACJ;;AAEA;;AACI;;AACJ;;AAGA;;AACI;;AAA8E;;AAAM;;AACpF;;AAA6E;AAAA,qBAAS,IAAAC,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAa;;AACvH;;AAEJ;;AAKR;;AACA;;AAEJ;;AAEA;;;;AA3FU;;AAiB4B;;AAAA;;AAqBzB;;AAAA;;AAOO;;AAAA;;AAYF;;AAAA;;AAkCN;;AAAA;;;;;;;;;;;;;;AC1FZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAmBaC,a;;;;;yBAAAA,a;AAAa,O;;;cAAbA;;;kBAVF,CACP,4DADO,EAEP,kEAFO,EAGP,oEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,qEANO,EAOP,wDAAaC,OAAb,EAPO,C;;;;4HAUED,a,EAAa;AAAA,yBAXT,kEAWS;AAXI,oBAE1B,4DAF0B,EAG1B,kEAH0B,EAI1B,oEAJ0B,EAK1B,0DAL0B,EAM1B,kEAN0B,EAO1B,qEAP0B,EAOb,uDAPa;AAWJ,S;AAJT,O","file":"address-address-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { MainComponent } from './main/main.component'\r\n\r\nconst router: Routes = [\r\n    {\r\n        path: '',\r\n        component: MainComponent\r\n    },\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(router),\r\n        SharedModule\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AddressRouting {}","import { Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Apollo, gql } from 'apollo-angular';\nimport { ModalBasicComponent } from '../../shared/modal-basic/modal-basic.component'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Variables, Response } from '../../shared/model'\nimport { ToastData, ToastOptions, ToastyService } from 'ng2-toasty';\nimport * as L from 'leaflet'\nimport { MapOptions, tileLayer, ZoomAnimEvent } from 'leaflet';\nimport { latLng } from 'leaflet';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: [\n    './main.component.scss',\n    '../../../../node_modules/ng2-toasty/style-bootstrap.css',\n    '../../../../node_modules/ng2-toasty/style-default.css',\n    '../../../../node_modules/ng2-toasty/style-material.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MainComponent implements OnInit, OnDestroy {\n\n  subscriptions = [];\n  addresses;\n  address;\n  text = \"\";\n\n  map;\n  zoom;\n  options: MapOptions = {\n    layers: [tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      opacity: 0.7,\n      maxZoom: 24,\n      detectRetina: true,\n      attribution: ''\n    })],\n    zoom: 19,\n    center: latLng(33.58368306601847, -7.636966872068143)\n  };\n\n  @ViewChild(ModalBasicComponent) modal;\n\n  addressForm = this.fb.group({\n    title: [\"\"],\n    address: [\"\"],\n    lat: [\"\"],\n    lng: [\"\"],\n\n  });\n\n  //notify\n  position = 'bottom-right';\n  title: string;\n  msg: string;\n  showClose = true;\n  theme = 'bootstrap';\n  type = 'default';\n  closeOther = false;\n\n\n  constructor(\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private toastyService: ToastyService,\n    private router: Router\n\n  ) { }\n\n\n\n  ngOnInit(): void {\n    this.getAddresses();\n\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((e: Subscription) => e.unsubscribe());\n  }\n\n  addToast(options) {\n    if (options.closeOther) {\n      this.toastyService.clearAll();\n    }\n    this.position = options.position ? options.position : this.position;\n    const toastOptions: ToastOptions = {\n      title: options.title,\n      msg: options.msg,\n      showClose: options.showClose,\n      timeout: options.timeout,\n      theme: options.theme,\n      onAdd: (toast: ToastData) => {\n        /* added */\n        console.log('Toast  has been added!');\n\n      },\n      onRemove: (toast: ToastData) => {\n        /* removed */\n        console.log('deleted!');\n      }\n    };\n\n    switch (options.type) {\n      case 'default': this.toastyService.default(toastOptions); break;\n      case 'info': this.toastyService.info(toastOptions); break;\n      case 'success': this.toastyService.success(toastOptions); break;\n      case 'wait': this.toastyService.wait(toastOptions); break;\n      case 'error': this.toastyService.error(toastOptions); break;\n      case 'warning': this.toastyService.warning(toastOptions); break;\n    }\n  }\n\n\n  getAddresses() {\n    const query = this.apollo.watchQuery({\n      fetchPolicy: 'no-cache',\n      query: gql`\n            query getAllAdress{\n              getAllAdress {\n                 _id\n                 title\n                 address\n                 lat\n                 lng\n                 by {\n                   name\n                   surname\n                 }\n              }\n            }\n        `,\n      variables: {\n\n      }\n    })\n      .valueChanges\n      .subscribe((result: any) => {\n        this.addresses = result.data.getAllAdress\n      },\n        (err) => {\n\n          this.addToast({\n            title: 'Error',\n            msg: err.message,\n            timeout: 5000,\n            theme: 'material',\n            position: 'bottom-right',\n            type: 'error'\n          })\n        }\n      );\n    this.subscriptions.push(query);\n  }\n\n\n  deleteAddress(id) {\n\n    const query = this.apollo.mutate({\n      mutation: gql`\n            mutation removeAddress($id: String!) {\n              removeAddress(id: $id) {\n                _id\n              }\n            }\n          `,\n      variables: {\n        id\n      }\n    })\n      .subscribe(\n        res => {\n          this.getAddresses()\n          this.addToast({\n            title: 'Done',\n            msg: 'Address has been Deleted!',\n            timeout: 5000,\n            theme: 'material',\n            position: 'bottom-right',\n            type: 'success'\n          });\n        }\n      );\n    this.subscriptions.push(query);\n  }\n\n  updateAddress(address) {\n    this.modal.show();\n    this.address = address;\n    this.addressForm.patchValue(this.address);\n\n  }\n\n\n  onMapReady(map) {\n\n    this.map = map;\n\n    const myIcon = L.divIcon({ className: 'ti-location-pin ' });\n    if (this.address && this.address.lat && this.address.lng) {\n      L.marker([this.address.lat, this.address.lng], { icon: myIcon }).addTo(this.map);\n    } else {\n      L.marker([33.58368306601847, -7.636966872068143], { icon: myIcon }).addTo(this.map);\n    }\n\n    this.zoom = map.getZoom();\n\n\n  }\n\n  onMapZoomEnd(e: ZoomAnimEvent) {\n    this.zoom = e.target.getZoom();\n\n  }\n\n  onUpdate() {\n\n    const { _id: id } = this.address;\n    const data = this.addressForm.value;\n    delete data._id\n    const query = this.apollo\n      .mutate<Response, Variables>({\n        mutation: gql`\n        mutation Update($id: String!, $UpdateAddress: UpdateAddress!){\n          updateAddress(id:$id, UpdateAddress:$UpdateAddress) {\n            title\n            address\n            by{\n              _id\n            }\n          }\n}\n      `,\n        variables: {\n          id,\n          UpdateAddress: data\n        }\n      }).subscribe(\n        (res) => {\n          this.address = {};\n          this.modal.hide();\n          this.addToast({\n            title: 'Done',\n            msg: 'Address has been Updated!',\n            timeout: 5000,\n            theme: 'material',\n            position: 'bottom-right',\n            type: 'success'\n          });\n        },\n        (err) => {\n          this.addToast({\n            title: 'Error',\n            msg: err.message,\n            timeout: 5000,\n            theme: 'material',\n            position: 'bottom-right',\n            type: 'error'\n          })\n        }\n      )\n    this.subscriptions.push(query);\n  }\n\n  checkAddress() {\n    this.map.panTo([this.addressForm.value.lat, this.addressForm.value.lng]);\n  }\n\n}\n","<app-card [title]=\"'Address Management'\">\n\n\n    <div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-hover\">\n              <thead>\n              <tr>\n                <th>#</th>\n                <th>Title</th>\n                <th>address</th>\n                <th>by</th>\n                <th> Action </th>\n              </tr>\n              </thead>\n              <tbody>\n\n              <tr *ngFor=\"let address of addresses\">\n                <th scope=\"row\">{{ address._id }}</th>\n                <td>{{ address.title }}</td>\n                <td>{{ address.address }}</td>\n                <td>{{ address.by.name }} {{ address.by.surname }}</td>\n            \n                <td>\n                     <button type=\"button\" class=\"btn btn-success btn-round\"  placement=\"bottom\" [ngbPopover]=\"successContent\" (click)=\"updateAddress(address)\">update</button>\n                     <button type=\"button\" class=\"btn btn-danger btn-round\"  placement=\"bottom\" [ngbPopover]=\"successContent\" (click)=\"deleteAddress(address._id)\">delete</button>\n                    </td>\n              </tr>\n              \n              </tbody>\n            </table>\n          </div>\n    </div>\n</app-card>\n\n\n<app-modal-basic #Modal >\n    <div class=\"app-modal-header\">\n         <h4>{{ text }}</h4> \n    </div>\n    <div class=\"app-modal-body\">  \n\n                <div\n                     class=\"map-container\"\n                     leaflet\n                    [leafletOptions]=\"options\"\n                    (leafletMapReady)=\"onMapReady($event)\"\n                    (leafletMapZoomEnd)=\"onMapZoomEnd($event)\"\n                    style=\"\n                        width:100%;\n                        height:200px;\n                        margin-bottom: 20px;\n                        \"\n\n                ></div>\n\n            \n            <form [formGroup]=\"addressForm\" (ngSubmit)=\"onUpdate()\">\n\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control form-control-normal\" placeholder=\"Title\"  formControlName=\"title\" >\n                </div>\n\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control form-control-normal\" placeholder=\"Address\" formControlName=\"address\" >\n                </div>\n\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control form-control-normal\" placeholder=\"Lat\" formControlName=\"lat\" >\n                </div>\n\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control form-control-normal\" placeholder=\"Lng\" formControlName=\"lng\">\n                </div>\n                \n\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-success btn-round\"  placement=\"bottom\"  >update</button>\n                    <button type=\"button\" class=\"btn btn-primary btn-round\"  placement=\"bottom\"  (click)=\"checkAddress()\">check address</button>\n                </div>\n                \n            </form>\n       \n        \n        \n        \n    </div>\n    <div class=\"app-modal-footer\"></div>\n    \n</app-modal-basic>\n\n<ng2-toasty [position]=\"position\"></ng2-toasty>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainComponent } from './main/main.component';\nimport { AddressRouting } from './address-route.module'\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport { ToastyModule } from 'ng2-toasty';\n@NgModule({\n  declarations: [MainComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AddressRouting,\n    FormsModule, \n    ReactiveFormsModule,\n    LeafletModule,\n    ToastyModule.forRoot()\n  ]\n})\nexport class AddressModule { }\n"]}