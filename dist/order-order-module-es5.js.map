{"version":3,"sources":["webpack:///src/app/order/order.module.ts","webpack:///src/app/order/order-route.module.ts","webpack:///src/app/order/main/main.component.ts","webpack:///src/app/order/main/main.component.html"],"names":["OrderModule","forRoot","routes","path","component","OrderRouteModule","forChild","MainComponent","apollo","route","fb","toastyService","titleService","router","subscriptions","orders","order","text","orderForm","group","status","delivery","position","showClose","theme","type","closeOther","skip","ordersLength","setTitle","getOrders","getDeliveryMen","forEach","e","unsubscribe","options","clearAll","toastOptions","title","msg","timeout","onAdd","toast","console","log","onRemove","info","success","wait","error","warning","surname","query","watchQuery","fetchPolicy","variables","valueChanges","subscribe","res","data","getAllOrders","length","err","addToast","message","push","findAllDelivery","patchValue","modal","show","id","_id","UpdateOrderDto","value","mutate","mutation","hide","search","onUpdate"],"mappings":"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","file":"order-order-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainComponent } from './main/main.component';\nimport { OrderRouteModule } from './order-route.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ToastyModule } from 'ng2-toasty';\n\n\n\n@NgModule({\n  declarations: [\n    MainComponent\n  ],\n  imports: [\n    CommonModule,\n    OrderRouteModule,\n    SharedModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ToastyModule.forRoot()\n  ]\n})\nexport class OrderModule { }\n","import { Route } from \"@angular/compiler/src/core\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { MainComponent } from \"./main/main.component\";\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: MainComponent }\r\n];\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ]\r\n})\r\nexport class OrderRouteModule{}","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Apollo, gql } from 'apollo-angular';\nimport { ToastData, ToastOptions, ToastyService } from 'ng2-toasty';\nimport { ModalBasicComponent } from '../../shared/modal-basic/modal-basic.component'\nimport { Title } from \"@angular/platform-browser\";\nimport { Variables, Response } from '../../../app/shared/model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit, OnDestroy {\n\n  constructor(\n    private apollo: Apollo,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private toastyService: ToastyService,\n    private titleService: Title,\n    private router: Router\n  ) { }\n\n  subscriptions = [];\n\n  orders = [];\n  order: any = {};\n\n  delivery;\n\n  text = 'Update order status';\n  surname;\n\n  @ViewChild(ModalBasicComponent) modal;\n\n  orderForm = this.fb.group({\n    status: [\"\"],\n    delivery: [\"\"],\n  });\n\n  //notify\n  position = 'bottom-right';\n  title: string;\n  msg: string;\n  showClose = true;\n  theme = 'bootstrap';\n  type = 'default';\n  closeOther = false;\n  skip = 0;\n  ordersLength = 0;\n\n  ngOnInit(): void {\n    this.titleService.setTitle('Orders management');\n    this.getOrders();\n    this.getDeliveryMen();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((e: Subscription) => e.unsubscribe());\n  }\n\n\n  addToast(options) {\n    if (options.closeOther) {\n      this.toastyService.clearAll();\n    }\n    this.position = options.position ? options.position : this.position;\n    const toastOptions: ToastOptions = {\n      title: options.title,\n      msg: options.msg,\n      showClose: options.showClose,\n      timeout: options.timeout,\n      theme: options.theme,\n      onAdd: (toast: ToastData) => {\n        /* added */\n        console.log('Toast  has been added!');\n\n      },\n      onRemove: (toast: ToastData) => {\n        /* removed */\n        console.log('deleted!');\n      }\n    };\n\n    switch (options.type) {\n      case 'default': this.toastyService.default(toastOptions); break;\n      case 'info': this.toastyService.info(toastOptions); break;\n      case 'success': this.toastyService.success(toastOptions); break;\n      case 'wait': this.toastyService.wait(toastOptions); break;\n      case 'error': this.toastyService.error(toastOptions); break;\n      case 'warning': this.toastyService.warning(toastOptions); break;\n    }\n  }\n\n  getOrders(surname?, skip = 0) {\n\n    const query = this.apollo\n      .watchQuery({\n        fetchPolicy: 'no-cache',\n        query: gql`\n              query getAllOrders($surname: String, $skip: Float) {\n                getAllOrders(surname: $surname, skip:$skip){\n                    _id\n                    title\n                    description\n                    from {\n                      address\n                    }\n                    to {\n                      address\n                    }\n                    by {\n                      name\n                      surname\n                    }\n                    status\n                    createdAt\n                }\n              }\n\n              \n          `,\n        variables: {\n          surname,\n          skip\n        }\n      })\n      .valueChanges\n      .subscribe(\n        (res: any) => {\n\n          this.orders = [...this.orders, ...res.data?.getAllOrders];\n          this.ordersLength = this.orders.length;\n\n\n        },\n        (err) => {\n          this.addToast({\n            title: 'Error',\n            msg: err.message,\n            timeout: 5000,\n            theme: 'material',\n            position: 'bottom-right',\n            type: 'error'\n          })\n        }\n      );\n\n      this.subscriptions.push(query)\n  }\n\n\n  getDeliveryMen() {\n\n\n    const query = this.apollo.watchQuery({\n      query: gql`\n        query DeliveryList {\n          findAllDelivery{\n                _id\n                name\n                surname\n              }\n          }\n      `\n    }).valueChanges\n      .subscribe(\n        (res: any) => {\n          this.delivery = res.data?.findAllDelivery;\n        }\n\n      );\n\n      this.subscriptions.push(query);\n\n\n\n  }\n\n  getMore() {\n    this.skip = this.skip + 10;\n    this.getOrders(null, this.skip);\n  }\n  search(e) {\n    this.orders = []\n    this.getOrders(e);\n  }\n  updateOrder(order) {\n    this.order = order;\n    this.orderForm.patchValue({\n      status: this.order.status,\n      delivery: this.order.delivery\n    });\n    this.modal.show()\n  }\n  onUpdate() {\n\n    const { _id: id } = this.order;\n    const UpdateOrderDto = this.orderForm.value;\n\n    const mutate = this.apollo\n      .mutate<Response, Variables>({\n        mutation: gql`\n          mutation updateOrder($id: String!, $UpdateOrderDto : UpdateOrderDto! ) {\n            updateOrder(id: $id, UpdateOrderDto : $UpdateOrderDto ){\n                title\n            }\n          }\n      `,\n        variables: {\n          id,\n          UpdateOrderDto\n        }\n      })\n      .subscribe(\n        (res) => {\n          this.orders = [];\n          this.skip = 0;\n          this.getOrders();\n          this.modal.hide();\n          this.addToast({\n            title: 'Done',\n            msg: 'Order has been Updated!',\n            timeout: 5000,\n            theme: 'material',\n            position: 'bottom-right',\n            type: 'success'\n          });\n        },\n        (err) => {\n          this.addToast({\n            title: 'Error',\n            msg: err.message,\n            timeout: 5000,\n            theme: 'material',\n            position: 'bottom-right',\n            type: 'error'\n          })\n        }\n      );\n      this.subscriptions.push(mutate);\n\n  }\n\n  deleteOrder(id) {\n    const query = this.apollo\n    .mutate({\n      mutation: gql`\n        mutation removeOrder($id: String!) {\n          removeOrder(id: $id) {\n            _id\n          }\n        }\n      `,\n      variables: {\n        id\n      }\n    }).subscribe(\n      (res) => {\n        this.skip = 0;\n        this.orders = []\n        this.addToast({\n        title: 'Done',\n        msg: 'Order has been Removed!',\n        timeout: 5000,\n        theme: 'material',\n        position: 'bottom-right',\n        type: 'success'\n      });\n      this.getOrders()\n    },\n    (err) => {\n      this.addToast({\n        title: 'Error',\n        msg: err.message,\n        timeout: 5000,\n        theme: 'material',\n        position: 'bottom-right',\n        type: 'error'\n      })\n    })\n\n    this.subscriptions.push(query);\n  }\n\n}\n","<app-card [title]=\"'Order Management'\">\n\n    <div class=\"form-group\">\n        <input type=\"text\" class=\"form-control form-control-normal\" placeholder=\"Search by surname\"  [(ngModel)]=\"surname\" (ngModelChange)=\"search($event)\">\n    </div>\n    \n    <div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-hover\">\n              <thead>\n              <tr>\n                <th>#</th>\n                <th>Title</th>\n                <th>from</th>\n                <th>to</th>\n                <th>status</th>\n                <th>by</th>\n                <th> Created At </th>\n                <th> Action </th>\n              </tr>\n              </thead>\n              <tbody>\n\n              <tr *ngFor=\"let order of orders\" \n              [ngClass]=\"{\n                'table-danger': order.status === 'inactive',\n                'table-warning': order.status === 'pending',\n                'table-success': order.status === 'delivered'\n              }\"\n              >\n                    <th scope=\"row\">{{ order._id }}</th>\n                    <td>{{ order.title }}</td>\n                    <td>{{ order.from.address }}</td>\n                    <td>{{ order.to.address }}</td>\n                    <td>{{ order.status }} </td>\n                    <td>{{ order.by.name }} {{ order.by.surname }}</td>\n                    <td>{{ order.createdAt | date }}</td>\n                    \n                \n                    <td>\n                        <button type=\"button\" class=\"btn btn-success btn-round\"  placement=\"bottom\" [ngbPopover]=\"successContent\" (click)=\"updateOrder(order)\">update</button>\n                        <button type=\"button\" class=\"btn btn-danger btn-round\"  placement=\"bottom\" [ngbPopover]=\"successContent\" (click)=\"deleteOrder(order._id)\">delete</button>\n                    </td>\n              </tr>\n            <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td style=\"align-items: center;\" *ngIf=\"ordersLength >= 10 \"><a (click)=\"getMore()\">Get More!</a></td>\n                <td></td>               \n                <td></td>\n                <td></td>\n                <td></td>\n                \n            </tr>\n              </tbody>\n            </table>\n             \n          </div>\n    </div>\n</app-card>\n\n\n<app-modal-basic #Modal >\n    <div class=\"app-modal-header\">\n         <h4>{{ text }}</h4> \n    </div>\n    <div class=\"app-modal-body\">  \n            \n            <form [formGroup]=\"orderForm\" (ngSubmit)=\"onUpdate()\">\n\n                <div class=\"form-group\">\n                    <select class=\"form-control form-control-normal\" placeholder=\"deliver\" formControlName=\"delivery\" required>  \n                        <option [ngValue]=\"null\" disabled >Choose a Delivery man!</option>\n                        <option *ngFor=\"let item of delivery\" [ngValue]=\"item._id\" > {{item.name}} {{item.surname}} </option>\n                        \n                    </select>\n                </div>\n\n                <div class=\"form-group\">\n                    <select class=\"form-control form-control-normal\" placeholder=\"Status\" formControlName=\"status\" required>  \n                        <option value=\"inactive\" [selected] = \"order.status === 'inactive'\">Inactive</option>\n                        <option value=\"pending\" [selected] = \"order.status === 'pending'\">Pending</option>\n                        <option value=\"delivered\" [selected] = \"order.status === 'delivered'\">Delivered</option>\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <button type=\"submit\" class=\"btn btn-success btn-round\"  placement=\"bottom\"  >update</button>\n                    \n                </div>\n            </form>\n       \n        \n        \n        \n    </div>\n    <div class=\"app-modal-footer\"></div>\n    \n</app-modal-basic>\n\n<ng2-toasty [position]=\"position\"></ng2-toasty>"]}